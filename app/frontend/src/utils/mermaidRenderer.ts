export function openMermaidDiagram(mermaidCode: string): void {
    // 1) Sanitize & normalize the Mermaid text before embedding
    const normalize = (s: string) =>
        s
            .replace(/\r\n/g, "\n") // normalize EOL
            .replace(/[“”]/g, '"') // curly dbl quotes -> "
            .replace(/[‘’]/g, "'") // curly single quotes -> '
            .replace(/\t/g, "  ") // tabs -> spaces
            .trim();

    const safeForTemplateLiteral = (s: string) =>
        s
            .replace(/`/g, "\\`") // escape backticks for template literal
            .replace(/\$\{/g, "\\${") // prevent ${} interpolation
            .replace(/<\/script>/gi, "<\\/script>"); // avoid closing the script tag

    const cleaned = safeForTemplateLiteral(normalize(mermaidCode));

    const html = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <title>Process Diagram - Ava</title>
  <style>
    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
           margin: 0; padding: 20px; background: #f5f5f5; display: flex; flex-direction: column; align-items: center; min-height: 100vh; }
    .header { background: #fff; padding: 15px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); margin-bottom: 15px; text-align: center;
              width: 100%; max-width: 1000px; display: flex; align-items: center; justify-content: center; gap: 10px; }
    .header h1 { margin: 0; color: #333; font-size: 18px; }
    .diagram-container { background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); width: 98%; max-width: 1200px; overflow: auto; }
    #diagram { display: flex; justify-content: center; align-items: center; min-height: 120px; }
    .error { color: #d32f2f; text-align: left; padding: 16px; background: #fff0f0; border: 1px solid #ffd3d3; border-radius: 8px; }
    .error code, .error pre { background: #f7f7f7; padding: 8px; border-radius: 6px; display: block; overflow: auto; }
  </style>
</head>
<body>
  <div class="header">
    <h1>🎨 Process Diagram</h1>
    <p>Generated by Ava - Advanced Vocus Assistant</p>
  </div>

  <div class="diagram-container">
    <div id="diagram">Loading diagram...</div>
  </div>

  <script type="module">
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs';

    // 2) Initialize with safer defaults for mixed content
    mermaid.initialize({
      startOnLoad: false,
      theme: 'default',
      securityLevel: 'loose',           // allow HTML labels if they sneak in
      flowchart: { htmlLabels: true, curve: 'basis' }
    });

    // 3) Use a non-templated script tag to carry the raw text safely
    const raw = \`${cleaned}\`;

    const target = document.getElementById('diagram');

    const showError = (message, details) => {
      target.innerHTML = \`
        <div class="error">
          <h3>Unable to render diagram</h3>
          <p><strong>Error:</strong> <code>\${message?.toString?.() ?? message}</code></p>
          \${details ? \`<details open><summary>Show code</summary><pre>\${details}</pre></details>\` : ''}
        </div>\`;
    };

    try {
      // 4) Parse first to surface syntax errors explicitly
      try {
        mermaid.parse(raw);
      } catch (parseErr) {
        showError(parseErr?.str ?? parseErr?.message ?? 'Parse error', raw);
        throw parseErr;
      }

      // 5) Render with a unique id
      const { svg } = await mermaid.render('diagram-' + crypto.randomUUID(), raw);
      target.innerHTML = svg;
    } catch (error) {
      // If render still fails for any reason, show the full details
      showError(error?.message ?? 'Unknown error', raw);
      console.error('Mermaid render error:', error);
    }
  </script>
</body>
</html>`;

    const w = window.open("", "_blank");
    if (w) {
        w.document.write(html);
        w.document.close();
    } else {
        console.error("Failed to open new window for Mermaid diagram");
    }
}
